{"version":3,"sources":["skills/Skills.module.css","common/styles/Container.module.css","main/Main.module.css","skills/skill/Skill.module.css","header/Header.module.css","nav/Nav.module.css","nav/Nav.tsx","header/Header.tsx","main/Main.tsx","skills/skill/Skill.tsx","skills/Skills.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Nav","className","style","nav","href","Header","header","Main","mainBlock","styleContainer","container","text","photo","Skill","props","skill","icon","title","description","Skills","skillsBlock","StyleContainer","skillsContainer","skills","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,gBAAkB,gCAAgC,MAAQ,sBAAsB,OAAS,yB,gBCArJD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,mBAAmB,MAAQ,sB,gBCAxFD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,YAAc,6B,kBCAxFD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,IAAM,mB,+LCaTC,MAXf,WACI,OACI,yBAAKC,UAAWC,IAAMC,KAClB,uBAAGC,KAAK,IAAR,8CACA,uBAAGA,KAAK,IAAR,wCACA,uBAAGA,KAAK,IAAR,8CACA,uBAAGA,KAAK,IAAR,sDCGGC,MARf,WACI,OACI,yBAAKJ,UAAWC,IAAMI,QAClB,kBAAC,EAAD,Q,gCCYGC,MAff,WACI,OACI,yBAAKN,UAAWC,IAAMM,WAClB,yBAAKP,UAAWQ,IAAeC,WAC3B,yBAAKT,UAAWC,IAAMS,MAClB,gGACA,uKACA,kHAEJ,yBAAKV,UAAWC,IAAMU,W,gCCKvBC,MAVf,SAAeC,GACX,OACI,yBAAKb,UAAWC,IAAMa,OAClB,yBAAKd,UAAWC,IAAMc,OACtB,4BAAKF,EAAMG,OACX,0BAAMhB,UAAWC,IAAMgB,aAAcJ,EAAMI,eCYxCC,MApBf,WACI,OACI,yBAAKlB,UAAWC,IAAMkB,aAClB,yBAAKnB,UAAS,UAAKoB,IAAeX,UAApB,YAAiCR,IAAMoB,kBACjD,wBAAIrB,UAAWC,IAAMe,OAArB,2DACA,yBAAKhB,UAAWC,IAAMqB,QAClB,kBAAC,EAAD,CAAON,MAAO,WACPC,YAAa,8DACpB,kBAAC,EAAD,CAAOD,MAAO,aACPC,YAAa,qCACpB,kBAAC,EAAD,CAAOD,MAAO,aACPC,YAAa,mFACpB,kBAAC,EAAD,CAAOD,MAAO,cACPC,YAAa,wFCFzBM,MAVf,WACI,OACI,yBAAKvB,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCQwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4bdd1702.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"skillsBlock\":\"Skills_skillsBlock__-IBZt\",\"skillsContainer\":\"Skills_skillsContainer__13RW4\",\"title\":\"Skills_title__3UxFb\",\"skills\":\"Skills_skills__uTGFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__SS9iK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Main_mainBlock__1pAOk\",\"text\":\"Main_text__RnFNO\",\"photo\":\"Main_photo__PrEV2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skill\":\"Skill_skill__GZKfI\",\"icon\":\"Skill_icon__1vrFF\",\"description\":\"Skill_description__3FgIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1dvdy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__YcoLj\"};","import React from 'react';\r\nimport style from './Nav.module.css';\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div className={style.nav}>\r\n            <a href=\"\">Главная</a>\r\n            <a href=\"\">Скиллы</a>\r\n            <a href=\"\">Проекты</a>\r\n            <a href=\"\">Контакты</a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport Nav from '../nav/Nav';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={style.header}>\r\n            <Nav/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport style from './Main.module.css';\r\nimport styleContainer from '../common/styles/Container.module.css';\r\n\r\nfunction Main() {\r\n    return (\r\n        <div className={style.mainBlock}>\r\n            <div className={styleContainer.container}>\r\n                <div className={style.text}>\r\n                    <span>Всем привет!</span>\r\n                    <h1>Меня зовут Максим Филатов</h1>\r\n                    <p>Я frontend разработчик</p>\r\n                </div>\r\n                <div className={style.photo}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport style from './Skill.module.css';\r\n\r\ntype SkillPropsType = {\r\n    title: string\r\n    description: string\r\n}\r\n\r\nfunction Skill(props: SkillPropsType) {\r\n    return (\r\n        <div className={style.skill}>\r\n            <div className={style.icon}></div>\r\n            <h3>{props.title}</h3>\r\n            <span className={style.description}>{props.description}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skill;\r\n","import React from 'react';\r\nimport style from './Skills.module.css';\r\nimport StyleContainer from '../common/styles/Container.module.css';\r\nimport Skill from './skill/Skill';\r\n\r\nfunction Skills() {\r\n    return (\r\n        <div className={style.skillsBlock}>\r\n            <div className={`${StyleContainer.container} ${style.skillsContainer}`}>\r\n                <h2 className={style.title}>Мои скиллы</h2>\r\n                <div className={style.skills}>\r\n                    <Skill title={'HTML/CSS'}\r\n                           description={'Lorem ipsum dolor sit amet, consectetur adipisicing elit.'}/>\r\n                    <Skill title={'JavaScript'}\r\n                           description={'Excepturi inventore ipsa itaque.'}/>\r\n                    <Skill title={'TypeScript'}\r\n                           description={' Accusamus alias aspernatur corporis omnis pariatur reprehenderit, voluptates!'}/>\r\n                    <Skill title={'React/Redux'}\r\n                           description={'Minus molestias placeat quidem quos recusandae rerum sit voluptatem voluptatum!'}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;\r\n","import React from 'react';\nimport './App.css';\nimport Header from './header/Header';\nimport Main from './main/Main';\nimport Skills from './skills/Skills';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Main/>\n            <Skills/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}